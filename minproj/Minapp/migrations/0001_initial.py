# Generated by Django 4.2.3 on 2023-08-31 15:11

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'required': 'Обязательное поле', 'unique': 'Ведомство с таким названием уже существует'}, help_text='Введите название ведомства', max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name_plural': 'Ведомства',
                'db_table': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Логин')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('surname', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=255, verbose_name='Отчество')),
                ('staff', models.CharField(choices=[('AD', 'Администратор'), ('CO', 'Координатор'), ('OP', 'Оператор'), ('RE', 'Получатель')], max_length=2, verbose_name='Должность')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Эл. почта')),
                ('photo', models.ImageField(blank=True, upload_to='users/', verbose_name='Фотография')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('is_check', models.BooleanField(default=False, verbose_name='Проверка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный пользователь?')),
                ('department_id', models.ForeignKey(blank=True, help_text='Только для операторов', null=True, on_delete=django.db.models.deletion.CASCADE, to='Minapp.department', verbose_name='Ведомство')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Пользователи',
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'required': 'Обязательное поле', 'unique': 'Ведомство с таким названием уже существует'}, max_length=255, unique=True, verbose_name='Название')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True, verbose_name='Широта')),
                ('lon', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Долгота')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Эл. почта')),
                ('photo', models.ImageField(blank=True, upload_to='locations/', verbose_name='Фотография')),
                ('is_active', models.BooleanField(default=True)),
                ('department_id', models.ForeignKey(error_messages={'required': 'Обязательное поле'}, on_delete=django.db.models.deletion.CASCADE, to='Minapp.department')),
            ],
            options={
                'verbose_name_plural': 'Учреждения',
                'db_table': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание')),
                ('datetime', models.DateTimeField(default=datetime.datetime(2023, 8, 31, 18, 11, 43, 59924), verbose_name='Дата/время')),
                ('is_check', models.BooleanField(default=False, verbose_name='Согласовано')),
                ('is_finished', models.BooleanField(default=False, verbose_name='Выполнено')),
                ('photo', models.ImageField(blank=True, upload_to='events/', verbose_name='Фотография')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Minapp.location', verbose_name='Учреждение')),
                ('recipient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
            ],
            options={
                'verbose_name_plural': 'Мероприятия',
                'db_table': 'Events',
            },
        ),
    ]
